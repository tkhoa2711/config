# -*- mode: conf -*-

[user]
    name = Khoa Le
    email = ltkhoa2711@gmail.com
    signingkey = 1EEE1E478CC47379

[push]
    default = current

[color]
    diff = auto
    branch = auto
    status = auto

[alias]
    ci = commit
    cm = commit
    co = checkout
    st = status
    d = diff --color-words
    ds = diff --staged
    dw = diff --word-diff
    l = log
    b = branch
    rename = branch -m
    last = log -1 HEAD
    cl = clean -df
    cu = cleanup # see the actual alias below
    au = add -u
    s = stash
    sl = stash list
    sp = stash pop
    ss = stash show -p
    prb = pull --rebase
    rbc = rebase --continue

    # pull remote changes and rebase them, also remove remote-tracking branches
    # that no longer exist on the remote; then update all the submodules
    up = !git pull --rebase --prune $@ && git submodule update --init --recursive

    # delete all local merged branches
    # https://stackoverflow.com/a/21857717
    cleanup = "!git branch --merged | grep -v '\\*\\|master\\|main\\|develop' | xargs -n 1 git branch -d"

    # amend last commit with all staged and unstaged changes
    amend = commit --amend --no-edit

    # undo last commit
    undo = reset --soft HEAD^

    # display git log in a nice hierarchy
    tree = log --graph --decorate --pretty=oneline --abbrev-commit --all

    # grab all stuffs from upstream and compare current branch against the upstream master branch
    in = !git fetch && git log ..origin/master

    # show diff of the given commit with its parent
    diffp = !git diff $@^!

    # remove the last commit
    # NOTE: try not to use this often
    rollback = reset --hard HEAD^

    # rename a stash
    stash-rename = "!_() { rev=$(git rev-parse $1) && git stash drop $1 || exit 1 ; git stash store -m \"$2\" $rev; }; _"

    # list all files in a commit
    files = diff-tree --no-commit-id --name-only -r

    set-upstream = !git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`

    rbi = "!git rebase -i \"$1\"^ #"

[commit]
    gpgsign = true

[merge]
    tool = vimdiff
    conflictstyle = diff3
    prompt = false

[tag]
    gpgSign = true
    forceSignAnnotated = true

[gpg]
    program = /usr/local/bin/gpg

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true

[sequence]
    editor = interactive-rebase-tool
